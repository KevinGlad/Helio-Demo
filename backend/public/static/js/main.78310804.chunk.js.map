{"version":3,"sources":["components/LoggedInContext.js","config.js","components/ProtectedRoute.js","components/Signup.js","crud.js","components/Login.js","components/ForgotPass.js","components/Home.js","components/EditUserModal.js","components/UserCard.js","components/EditUsers.js","components/MainRouter.js","App.js","serviceWorker.js","index.js"],"names":["LoggedInContext","React","createContext","LoggedInProvider","props","useState","users","setUsers","loggedIn","setLoggedIn","token","setToken","Provider","value","checkUser","userName","password","rtnValue","fetch","method","headers","body","JSON","stringify","then","httpResponse","ok","Error","json","response","console","log","hasOwnProperty","authenticated","catch","error","message","children","LoggedInConsumer","Consumer","ProtectedRoute","Component","component","rest","render","to","Signup","setUserName","setPassword","useContext","Form","Group","controlId","Label","Control","type","placeholder","onChange","event","preventDefault","target","Button","variant","onClick","endpoint","doc","err","createOne","Login","username","ForgotPass","Home","useEffect","apiResponse","dbUsers","map","user","key","_id","EditUserModal","show","setShow","handleClose","Fragment","Modal","onHide","Header","closeButton","Title","Body","Footer","refresh","UserCard","Card","style","width","Img","src","Text","result","EditUsers","allUsers","MainRouter","path","App","className","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78310804.chunk.js","sourcesContent":["import React from 'react'\r\nimport { uriBase, apiVer } from '../config'\r\n\r\nconst LoggedInContext = React.createContext()\r\n\r\nconst LoggedInProvider = (props) => {\r\n\r\n    let [users, setUsers] = React.useState([])\r\n    let [loggedIn, setLoggedIn] = React.useState(false)\r\n    let [token, setToken] = React.useState(\"\")\r\n\r\n    // function to check user\r\n    const checkUser = (userName, password) => {\r\n\r\n        let rtnValue = false\r\n        // if username and password match return true\r\n\r\n        fetch(`${uriBase}/${apiVer}/login`,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ userName, password })\r\n            })\r\n            .then(httpResponse => {\r\n\r\n                if (!httpResponse.ok) {\r\n                    throw new Error(\"Login Error\")\r\n                }\r\n\r\n                // convert json from endpoint into a js object\r\n                return httpResponse.json()\r\n            })\r\n            .then(response => {\r\n\r\n                console.log(response)\r\n                if (response.hasOwnProperty('authenticated')) {\r\n\r\n                    setLoggedIn(response.authenticated)\r\n\r\n                    if (response.authenticated === true) {\r\n                        setToken(response.token)\r\n                    }\r\n                    rtnValue = response.authenticated\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message)\r\n            })\r\n\r\n        return rtnValue\r\n\r\n    }\r\n\r\n    return (\r\n        <LoggedInContext.Provider value={{ users, setUsers, loggedIn, checkUser, token}} >\r\n            {props.children}\r\n        </LoggedInContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nconst LoggedInConsumer = LoggedInContext.Consumer\r\nexport { LoggedInContext, LoggedInProvider, LoggedInConsumer }","// configure our api enpoints\r\nconst uriBase = (process.env.NODE_ENV !== \"production\" ? (\r\n        \"http://localhost:3000\"\r\n    ) : (\r\n        \"\"\r\n    )\r\n)\r\n\r\nconst apiVer = \"api/v1\"\r\n\r\nexport {uriBase, apiVer}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { LoggedInConsumer } from './LoggedInContext'\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n\r\n    return (\r\n\r\n        <LoggedInConsumer>\r\n            {\r\n                ({ loggedIn }) => (\r\n                    <Route\r\n                        render={props =>\r\n                            loggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n                        }\r\n                        {...rest}\r\n                    />\r\n                )\r\n            }\r\n        </LoggedInConsumer>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute","import React, {useContext} from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport {LoggedInConsumer, LoggedInContext} from \"./LoggedInContext\"\r\nimport {uriBase, apiVer} from '../config'\r\nimport {createOne} from '../crud'\r\n\r\nconst Signup = (props) => {\r\n\r\n    let [userName, setUserName] = React.useState(\"\")\r\n    let [password, setPassword] = React.useState(\"\")\r\n\r\n    let {token} = useContext(LoggedInContext)\r\n\r\n    const userNameOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const passwordOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const submitOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            createOne(`${uriBase}/${apiVer}/users` , token, {userName, password})\r\n            console.log(\"added\")\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <Form.Group controlId=\"signUpUserName\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Username\" onChange={userNameOnChangeHandler} value={userName} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"signUpPassword\">\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={passwordOnChangeHandler} value={password} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={submitOnClickHandler}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            <br></br>\r\n            <Link to='/'>Home</Link>\r\n            <LoggedInConsumer>\r\n            {\r\n                value => (\r\n\r\n                    value.loggedIn ? (\r\n                        <h3>Logged In</h3>\r\n                    ) : (\r\n                        <h3>Not Logged In</h3>\r\n                    )\r\n                )\r\n\r\n            }\r\n            </LoggedInConsumer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n\r\n","// this file handles the api calls to our backend\r\n// functions require an api endpoint a token and a doc\r\n\r\n// create a record\r\nconst createOne = (endpoint, token, doc) => {\r\n\r\n    console.log(doc)\r\n    return fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(doc)\r\n    })\r\n        .then(httpResponse => {\r\n            if (!httpResponse.ok) {\r\n                throw new Error(`Error with POST at ${endpoint}`)\r\n            }\r\n\r\n            return httpResponse.json()\r\n        })\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n}\r\n\r\n// Get all\r\nconst getAll = (endpoint) => {\r\n\r\n    return fetch(endpoint, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(httpResponse => {\r\n\r\n            if (!httpResponse.ok) {\r\n                throw new Error(`Error with GET at ${endpoint}`)\r\n            }\r\n\r\n            return httpResponse.json()\r\n\r\n        })\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n\r\n}\r\n\r\n// Get One\r\nconst getOne = () => {\r\n\r\n}\r\n\r\n// Patch One\r\nconst patchOne = (endpoint, doc) => {\r\n\r\n    return fetch(endpoint, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(doc)\r\n    })\r\n    .then(httpResponse => {\r\n\r\n        if (!httpResponse.ok) {\r\n            throw new Error(`Error with PATCH at ${endpoint}`)\r\n        }\r\n\r\n        return httpResponse.json()\r\n    })\r\n    .catch(err => {\r\n        throw err\r\n    })\r\n}\r\n\r\n\r\n// Update One\r\nconst updateOne = (endpoint, doc) => {\r\n\r\n    return fetch(endpoint, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(doc)\r\n    })\r\n    .then(httpResponse => {\r\n\r\n        if (!httpResponse.ok) {\r\n            throw new Error(`Error with PUT at ${endpoint}`)\r\n        }\r\n\r\n        return httpResponse.json()\r\n    })\r\n    .catch(err => {\r\n        throw err\r\n    })\r\n\r\n}\r\n\r\n// Delete One\r\nconst deleteOne = (endpoint) => {\r\n\r\n    return fetch(endpoint, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(httpResponse => {\r\n\r\n            if (!httpResponse.ok) {\r\n                throw new Error(`Error with DELETE at ${endpoint}`)\r\n            }\r\n\r\n            return httpResponse.json()\r\n\r\n        })\r\n        .catch(err => {\r\n            throw err\r\n        })\r\n}\r\n\r\nexport { createOne, getAll, getOne, patchOne, updateOne, deleteOne }","import React from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport {LoggedInConsumer, LoggedInContext} from \"./LoggedInContext\"\r\n\r\nconst Login = (props) => {\r\n\r\n    let [username, setUserName] = React.useState(\"\")\r\n    let [password, setPassword] = React.useState(\"\")\r\n\r\n    // context\r\n    let {checkUser} = React.useContext(LoggedInContext)\r\n\r\n    const usernameOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const passwordOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const submitOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        // check to see if user exists\r\n        checkUser(username, password)\r\n        // if exists check password\r\n\r\n        // display result\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <Form.Group controlId=\"loginUserName\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Username\" onChange={usernameOnChangeHandler} value={username} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"loginPassword\">\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={passwordOnChangeHandler} value={password} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={submitOnClickHandler}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            <br></br>\r\n            <Link to='/'>Home</Link>\r\n            <LoggedInConsumer>\r\n            {\r\n                value => (\r\n\r\n                    value.loggedIn ? (\r\n                        <h3>Logged In</h3>\r\n                    ) : (\r\n                        <h3>Not Logged In</h3>\r\n                    )\r\n                )\r\n\r\n            }\r\n            </LoggedInConsumer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Link} from 'react-router-dom'\r\nimport {LoggedInConsumer} from \"./LoggedInContext\"\r\nimport {uriBase, apiVer} from \"../config\"\r\nimport {patchOne} from \"../crud\"\r\n\r\nconst ForgotPass = (props) => {\r\n\r\n    let [userName, setUserName] = React.useState(\"\")\r\n    let [password, setPassword] = React.useState(\"\")\r\n\r\n    const usernameOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const passwordOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const submitOnClickHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            patchOne(`${uriBase}/${apiVer}/users/${userName}`,{password})\r\n            console.log(\"Patched\")\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <Form.Group controlId=\"forgotPassUserName\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Username\" onChange={usernameOnChangeHandler} value={userName} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"forgotPassPassword\">\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"New Password\" onChange={passwordOnChangeHandler} value={password} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={submitOnClickHandler}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            <br></br>\r\n            <Link to='/'>Home</Link>\r\n            <LoggedInConsumer>\r\n            {\r\n                value => (\r\n\r\n                    value.loggedIn ? (\r\n                        <h3>Logged In</h3>\r\n                    ) : (\r\n                        <h3>Not Logged In</h3>\r\n                    )\r\n                )\r\n\r\n            }\r\n            </LoggedInConsumer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPass;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {LoggedInConsumer, LoggedInContext} from \"./LoggedInContext\"\r\n\r\nfunction Home(props) {\r\n\r\n    let {users, setUsers, loggedIn} = React.useContext(LoggedInContext)\r\n\r\n    const isLoggedIn = () => {\r\n\r\n        if (loggedIn) {\r\n            return (<h3>Logged In</h3>)\r\n        } else {\r\n            return (<h3>Not Logged In</h3>)\r\n        }\r\n    }\r\n\r\n    const getUsers = () => {\r\n\r\n        fetch(\"http://localhost:3000/api/v1/users\",{\r\n            method: \"GET\",\r\n            \"Content-Type\": \"application/json\"\r\n        })\r\n        .then (apiResponse => apiResponse.json())\r\n        .then (dbUsers => {\r\n            console.log(dbUsers)\r\n            setUsers(dbUsers)\r\n        })\r\n    }\r\n\r\n    React.useEffect(getUsers,[])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                users.map(user => {\r\n                    return <li key={user._id}>{user.userName}</li>\r\n                })\r\n            }\r\n            <br></br>\r\n            <Link to=\"signup\">Sign Up</Link>\r\n            <br></br>\r\n            <Link to=\"login\">Login</Link>\r\n            <br></br>\r\n            <Link to=\"forgotpass\">Forgot Password</Link>\r\n            <br></br>\r\n            <Link to=\"admin\">Edit Users</Link>\r\n            {isLoggedIn()}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { updateOne } from '../crud'\r\nimport { uriBase, apiVer } from '../config'\r\n\r\nconst EditUserModal = (props) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [userName, setUserName] = useState(props.user.userName)\r\n    const [password, setPassword] = useState(props.user.password)\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const userNameOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setUserName(event.target.value)\r\n    }\r\n\r\n    const passwordOnChangeHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const saveOnClickHandler = (event) => {\r\n\r\n        event.preventDefault()\r\n\r\n        try {\r\n            updateOne(`${uriBase}/${apiVer}/users/${props.user.userName}`, { userName, password })\r\n            console.log(\"Updated\")\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n\r\n        setShow(false)\r\n        props.refresh()\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Button variant=\"primary\" onClick={handleShow}>Edit</Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{`Editing ${userName}`}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"editUserModalUserName\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Username\" onChange={userNameOnChangeHandler} value={userName} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"editUserModalPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" onChange={passwordOnChangeHandler} value={password} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={saveOnClickHandler}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n\r\n};\r\n\r\nexport default EditUserModal;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {deleteOne} from '../crud'\r\nimport {uriBase, apiVer} from '../config'\r\nimport EditUserModal from './EditUserModal'\r\n\r\nconst UserCard = (props) => {\r\n\r\n    const deleteOnClickHandler = (event) => {\r\n\r\n        deleteOne(`${uriBase}/${apiVer}/users/${props.user.userName}`,props.user)\r\n        .then(result => {\r\n            props.refresh()\r\n        })\r\n        .catch(err => {\r\n            console.log(err.message)\r\n        })\r\n        \r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n                <Card.Body>\r\n                    <Card.Title>{props.user.userName}</Card.Title>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the bulk of\r\n                        the card's content.\r\n                    </Card.Text>\r\n                    <EditUserModal user={props.user} refresh={props.refresh}></EditUserModal>\r\n                    <Button variant=\"primary\" onClick={deleteOnClickHandler}>Delete</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserCard;","import React, {useState, useEffect} from 'react'\r\nimport {getAll} from '../crud'\r\nimport {uriBase, apiVer} from '../config'\r\nimport UserCard from './UserCard'\r\n\r\nconst EditUsers = (props) => {\r\n\r\n    const [users, setUsers] = useState([])\r\n\r\n    const refresh = () => {\r\n\r\n        getAll(`${uriBase}/${apiVer}/users`)\r\n        .then(allUsers => {\r\n            setUsers(allUsers)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    useEffect( () => {\r\n        refresh()\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <h2>Users</h2>\r\n            {\r\n                users.map( user => {\r\n                    return <UserCard key={user._id} user={user} refresh={refresh}></UserCard>\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditUsers","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport {LoggedInProvider} from \"./LoggedInContext\"\r\nimport ProtectedRoute from \"./ProtectedRoute\"\r\n\r\nimport Signup from \"./Signup\"\r\nimport Login from \"./Login\"\r\nimport ForgotPass from \"./ForgotPass\"\r\nimport Home from \"./Home\"\r\nimport EditUsers from \"./EditUsers\"\r\n\r\nexport default function MainRouter() {\r\n\r\n    return (\r\n        <LoggedInProvider>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/signup\" component={Signup}></Route>\r\n                    <Route path=\"/login\" component={Login}></Route>\r\n                    <Route path=\"/forgotpass\" component={ForgotPass}></Route>\r\n                    <ProtectedRoute path=\"/admin\" component={EditUsers}></ProtectedRoute>\r\n                    {/* https://ui.dev/react-router-v4-pass-props-to-components/ */}\r\n                    {/* <ProtectedRoute path=\"/admin\" render={(props) => (<EditUsers {...props} test=\"tester\"></EditUsers>)}></ProtectedRoute> */}\r\n                    <Route path=\"/\" component={Home}></Route>\r\n                </Switch>\r\n            </Router>\r\n        </LoggedInProvider>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport MainRouter from './components/MainRouter'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainRouter></MainRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}